# used to create the object
name: Centaur

physics_engine: ${..physics_engine}

env:
  numEnvs: ${resolve_default:1024,${...num_envs}}
  envSpacing: 1.  # [m]
  test: ${resolve_default:False,${...test}}
  clipObservations: 5.0
  clipActions: 1.0

  plane:
    staticFriction: 1.0    # [-]
    dynamicFriction: 1.0   # [-]
    restitution: 0.        # [-]

  baseInitState:
    pos: [0.0, 0.0, 0.45] # x,y,z [m]
    rot: [ 0, 0, 0, 1 ] # x,y,z,w [quat]
    vLinear: [0.0, 0.0, 0.0]  # x,y,z [m/s]
    vAngular: [0.0, 0.0, 0.0]  # x,y,z [rad/s]

  randomCommandVelocityRanges:
    linear_x: [-1., 1.] # min max [m/s]
    yaw: [-1., 1.]          # min max [rad/s] {{{{{{{}}}}}}}
  control:
    stiffness: 
      head_pan: 125
      head_tilt: 125
      l1: 1000
      l3: 1000
      l4: 1000
      l_el: 250
      l_index_base: 125
      l_index_middle: 125
      l_index_tip: 125
      l_mid_base: 125
      l_mid_middle: 125
      l_mid_tip: 125
      l_sho_pitch: 250
      l_sho_roll: 250
      l_thumb_base: 125
      l_thumb_middle: 125
      l_thumb_tip: 125
      l_wrist: 125
      r1: 1000
      r3: 1000
      r4: 1000
      r_el: 250
      r_index_base: 125
      r_index_middle: 125
      r_index_tip: 125
      r_mid_base: 125
      r_mid_middle: 125
      r_mid_tip: 125
      r_sho_pitch: 250
      r_sho_roll: 250
      r_thumb_base: 125
      r_thumb_middle: 125
      r_thumb_tip: 125
      r_wrist: 125

    damping: 
      head_pan: 5
      head_tilt: 5
      l1: 1
      l3: 1
      l4: 1
      l_el: 1
      l_index_base: 5
      l_index_middle: 5
      l_index_tip: 5
      l_mid_base: 5
      l_mid_middle: 5
      l_mid_tip: 5
      l_sho_pitch: 1
      l_sho_roll: 1
      l_thumb_base: 5
      l_thumb_middle: 5
      l_thumb_tip: 5
      l_wrist: 5
      r1: 1
      r3: 1
      r4: 1
      r_el: 1
      r_index_base: 5
      r_index_middle: 5
      r_index_tip: 5
      r_mid_base: 5
      r_mid_middle: 5
      r_mid_tip: 5
      r_sho_pitch: 1
      r_sho_roll: 1
      r_thumb_base: 5
      r_thumb_middle: 5
      r_thumb_tip: 5
      r_wrist: 5

    actionScale: 1.57
    wheelActionScale: 30 # 30 rad/s max velocity for wheels
    controlFrequencyInv: 1 # 60 Hz

  defaultJointAngles:  # = target angles when action = 0.0
      head_pan: 00
      head_tilt: 00
      l1: 00
      l3: 00
      l4: 00
      l_sho_pitch: 0
      l_sho_roll: 1
      l_el: 1.4
      l_wrist: 00
      l_index_base: 00
      l_index_middle: 00
      l_index_tip: 00
      l_mid_base: 00
      l_mid_middle: 00
      l_mid_tip: 00
      l_thumb_base: 00
      l_thumb_middle: 00
      l_thumb_tip: 00
      r1: 00
      r3: 00
      r4: 00
      r_sho_pitch: 0.0
      r_sho_roll: -1
      r_el: -1.4
      r_wrist: 00
      r_index_base: 00
      r_index_middle: 00
      r_index_tip: 00
      r_mid_base: 00
      r_mid_middle: 00
      r_mid_tip: 00
      r_thumb_base: 00
      r_thumb_middle: 00
      r_thumb_tip: 00

  urdfAsset:
    collapseFixedJoints: True
    fixBaseLink: False
    # see GymDofDriveModeFlags (0 is none, 1 is pos tgt, 2 is vel tgt, 4 effort)
    defaultDofDriveMode: 4 

  learn:
    # rewards
    linearVelocityXYRewardScale: 1.0
    angularVelocityZRewardScale: 0.5
    torqueRewardScale: -0.00000025
    heightRewardScale: 0.0001
    pitchRewardScale: -0.5
    syncRewardScale: 1

    # normalization
    linearVelocityScale: 2.0
    angularVelocityScale: 0.25
    dofPositionScale: 1.0
    dofVelocityScale: 0.05

    # episode length in seconds
    episodeLength_s: 50

  # viewer cam:
  viewer:
    refEnv: 0
    pos: [0, 0, 3]  # [m]
    lookat: [1., 1, 3.3]  # [m]

  # set to True if you use camera sensors in the environment
  enableCameraSensors: False


sim:
 dt: 0.02
 substeps: 2
 up_axis: "z"
 use_gpu_pipeline: True
 gravity: [0.0, 0.0, -9.81]
 physx:
  num_threads: ${....num_threads}
  solver_type: ${....solver_type}
  use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
  num_position_iterations: 4
  num_velocity_iterations: 1
  contact_offset: 0.02
  rest_offset: 0.0
  bounce_threshold_velocity: 0.2
  max_depenetration_velocity: 100.0
  default_buffer_size_multiplier: 5.0
  max_gpu_contact_pairs: 8388608 # 8*1024*1024
  num_subscenes: ${....num_subscenes}
  contact_collection: 1 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (broken - do not use!)

task:
  randomize: False
  randomization_params:
    frequency: 600   # Define how many environment steps between generating new randomizations
    observations:
      range: [0, .002] # range for the white noise
      operation: "additive"
      distribution: "gaussian"
    actions:
      range: [0., .02]
      operation: "additive"
      distribution: "gaussian"
    sim_params: 
      gravity:
        range: [0, 0.4]
        operation: "additive"
        distribution: "gaussian"
        schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
        schedule_steps: 3000
    actor_params:
      centaur:
        color: True
        rigid_body_properties:
          mass: 
            range: [0.5, 1.5]
            operation: "scaling"
            distribution: "uniform"
            setup_only: True # Property will only be randomized once before simulation is started. See Domain Randomization Documentation for more info.
            schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
            schedule_steps: 3000
        rigid_shape_properties:
          friction:
            num_buckets: 500
            range: [0.7, 1.3]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          restitution:
            range: [0., 0.7]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
        dof_properties:
          damping: 
            range: [0.5, 1.5]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          stiffness: 
            range: [0.5, 1.5]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          lower:
            range: [0, 0.01]
            operation: "additive"
            distribution: "gaussian"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          upper:
            range: [0, 0.01]
            operation: "additive"
            distribution: "gaussian"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000